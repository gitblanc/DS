/**
 * 
 */
package gui.botones;

import gui.Boton;
import gui.Canvas;
import model.Line;

/**
 * 
 */
public class Justificado implements Boton {

	private Canvas canvas;

	public Justificado(Canvas canvas) {
		this.canvas = canvas;
	}

	@Override
	public void dibujaTexto(Line line) {
		this.canvas.append(createJustifiedLine(line));
	}

	private String createJustifiedLine(Line line) {
		var builder = new StringBuilder();
		var totalSpacesNeeded = this.canvas.getLineWidth() - line.numberOfCharacters();

		// Compute the number of spaces per gap
		var spacesPerGap = Math.max(1, totalSpacesNeeded / line.numberOfGaps());
		// The remaining spaces are distributed from left to right
		var extraSpaces = Math.max(0, totalSpacesNeeded - (spacesPerGap * line.numberOfGaps()));

		for (int i = 0; i < line.getWords().size(); i++) {
			builder.append(line.getWord(i));

			if (i < line.numberOfWords() - 1) {
				builder.append(" ".repeat(spacesPerGap));

				if (extraSpaces > 0) {
					builder.append(" ");
					extraSpaces--;
				}
			}
		}

		return builder.toString();
	}
}
